apiVersion: v1
kind: PersistentVolumeClaim
metadata:
# Name of the PersistentVolumeClaim for Nginx data
  name: nginx-data-pvc  
spec:
  accessModes:
  # Define access mode as ReadWriteOnce
    - ReadWriteOnce  
  resources:
    requests:
    # Request 1GiB of storage
      storage: 1Gi  

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: letsencrypt-pvc  # PersistentVolumeClaim for Let's Encrypt
spec:
  accessModes:
    - ReadWriteOnce  # Use mode as ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # Request 1GiB of storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
# Name of the PersistentVolumeClaim for MariaDB data
  name: mariadb-data-pvc  
spec:
 # Add access mode as ReadWriteOnce
  accessModes:
    - ReadWriteOnce 
  resources:
    requests:
    # Request 1GiB of storage
      storage: 1Gi 
---
apiVersion: apps/v1
kind: Deployment
metadata:
# Name your deployment
  name: nginx-proxy-manager  
spec:
# Number of replicas (instances) of the pod
  replicas: 2  
  selector:
    matchLabels:
    # Selector to match labels for pod assignment
      app: nginx-proxy-manager  
  template:
    metadata:
      labels:
      # Labels the pods created by this deployment
        app: nginx-proxy-manager  
    spec:
      containers:
      # Name the Kubernetes container
      - name: nginx-proxy-manager  
      # Docker image for Nginx Proxy Manager
        image: jc21/nginx-proxy-manager:latest  
        ports:
        - containerPort: 80  # Port 80 Exposed
        - containerPort: 81  # Port 81 Exposed 
        - containerPort: 443  # Port 443 Exposed 
        env:
        - name: DB_MYSQL_HOST
          value: "mariadb"  # MariaDB host
        - name: DB_MYSQL_PORT
          value: "3306"  # MariaDB port
        - name: DB_MYSQL_USER
          value: "proxy_manager_user"  # MariaDB username
        - name: DB_MYSQL_PASSWORD
          value: "user_pass"  # MariaDB password
        - name: DB_MYSQL_NAME
          value: "proxy-manager"  # MariaDB database name
          # Mount path for persistent data
        volumeMounts:
        - name: data
          mountPath: /data  
        - name: letsencrypt
        # Mount path for Let's Encrypt certificates
          mountPath: /etc/letsencrypt  
      volumes:
      - name: data
        persistentVolumeClaim:
        # PersistentVolumeClaim for Nginx data
          claimName: nginx-data-pvc  
      - name: letsencrypt
        persistentVolumeClaim:
        # PersistentVolumeClaim for Let's Encrypt certificates
          claimName: letsencrypt-pvc 

---
apiVersion: apps/v1
kind: Deployment
metadata:
# mariadb deployment
  name: mariadb  
spec:
# Number of mariadb replicas (instances)
  replicas: 1  
  selector:
    matchLabels:
      app: mariadb 
  template:
    metadata:
      labels:
        app: mariadb 
    spec:
      containers:
      # Name mariadb container
      - name: mariadb  
      # Docker image for MariaDB
        image: jc21/mariadb-aria:latest  
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root_pass"  # MariaDB root password
        - name: MYSQL_DATABASE
          value: "proxy-manager"  # MariaDB database name
        - name: MYSQL_USER
          value: "proxy_manager_user"  # MariaDB username
        - name: MYSQL_PASSWORD
          value: "user_pass"  # MariaDB user password
        volumeMounts:
        - name: data
        # Mount MariaDB path for persistent data
          mountPath: /var/lib/mysql  
      volumes:
      - name: data
        persistentVolumeClaim:
        # Use PersistentVolumeClaim for MariaDB data
          claimName: mariadb-data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy-manager
spec:
  selector:
    app: nginx-proxy-manager
  ports:
    - name: nginxport
      protocol: TCP
      port: 80
      targetPort: 80
    - name: webui
      protocol: TCP
      port: 81
      targetPort: 81
    - name: justtcp
      protocol: TCP
      port: 443
      targetPort: 443

---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
spec:
  selector:
    app: mariadb
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
